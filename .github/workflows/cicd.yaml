name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: cd aws-bedrock-a2a-proxy && uv sync --extra dev

    - name: Lint
      run: |
        cd aws-bedrock-a2a-proxy && uv run flake8 src/ tests/
        cd aws-bedrock-a2a-proxy && uv run pyright src/

    - name: Test
      run: cd aws-bedrock-a2a-proxy && uv run pytest tests/ -v --cov=src/aws_bedrock_a2a_proxy --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./aws-bedrock-a2a-proxy/coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Skip Release for local runs
      if: ${{ env.ACT }}
      run: echo "ℹ️  Skipping release when running locally with 'act'"

    - name: Create Release
      if: ${{ !env.ACT }}
      uses: googleapis/release-please-action@v4
      id: release
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        release-type: python

    - name: Install uv
      if: steps.release.outputs.release_created
      uses: astral-sh/setup-uv@v4

    - name: Build package
      if: steps.release.outputs.release_created
      run: cd aws-bedrock-a2a-proxy && uv build

    - name: Publish to TestPyPI
      if: steps.release.outputs.release_created
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        packages-dir: aws-bedrock-a2a-proxy/dist/